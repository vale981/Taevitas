#include "recorder.h"

Recorder::Recorder(QObject* parent) : QObject(parent) {};

void Recorder::newRecording(unsigned int bitrate, unsigned int width, unsigned int height, QDir p_dir, QString r_name, bool cap_frames) {
	if(is_recording)
		stopRecording();

	// check if directory is a directory and  is writable
	project_dir = p_dir;

	QFileInfo pDirInfo(project_dir.path());
	if(!pDirInfo.isDir() || !pDirInfo.isWritable()) {
		throw RecorderError::INVALID_PROJECT_DIRECTORY;
		return;
	}

	rec_name = r_name;
	capture_frames = cap_frames;
	verifyRecDir();
	
	
	// create subdir for recording	
	project_dir.mkdir(const QString &dirName)
};


RecorderError Recorder::verifyRecDir() {
	// check if project with same name exists and append to that
	// TODO: chech if there is any option to append
	// TODO: Check for special chars.

	if(rec_name == "") {
		return	RecorderError::INVALID_RECORDING_NAME;
	}
	
	QDir rec_dir(project_dir.path() + rec_name);

	if(rec_dir.exists()) {		
		QMessageBox msgBox;
	     
		msgBox.setText(tr("A recording with this name already exists. Which action should be taken?"));
		void *appendButton = msgBox.addButton(tr("Append the recording."), QMessageBox::ActionRole);
		void *removeButton = msgBox.addButton(tr("Overwrite recording."), QMessageBox::ActionRole);
		void *abortButton = msgBox.addButton(QMessageBox::Abort);

		msgBox.exec();

		if (msgBox.clickedButton() == appendButton) {
			// connect
		} else if (msgBox.clickedButton() == abortButton) {
			// abort
		}
	}

	project_dir.mkdir(rec_name);

	if(capture_frames)
		rec_dir.mkdir("frames");
}

